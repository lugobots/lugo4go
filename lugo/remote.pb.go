// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/remote.proto

package lugo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandResponse_StatusCode int32

const (
	CommandResponse_SUCCESS           CommandResponse_StatusCode = 0
	CommandResponse_INVALID_VALUE     CommandResponse_StatusCode = 1
	CommandResponse_DEADLINE_EXCEEDED CommandResponse_StatusCode = 2
	CommandResponse_OTHER             CommandResponse_StatusCode = 99
)

var CommandResponse_StatusCode_name = map[int32]string{
	0:  "SUCCESS",
	1:  "INVALID_VALUE",
	2:  "DEADLINE_EXCEEDED",
	99: "OTHER",
}

var CommandResponse_StatusCode_value = map[string]int32{
	"SUCCESS":           0,
	"INVALID_VALUE":     1,
	"DEADLINE_EXCEEDED": 2,
	"OTHER":             99,
}

func (x CommandResponse_StatusCode) String() string {
	return proto.EnumName(CommandResponse_StatusCode_name, int32(x))
}

func (CommandResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{3, 0}
}

type BallProperties struct {
	Position             *Point    `protobuf:"bytes,1,opt,name=Position,proto3" json:"Position,omitempty"`
	Velocity             *Velocity `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Holder               *Player   `protobuf:"bytes,3,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BallProperties) Reset()         { *m = BallProperties{} }
func (m *BallProperties) String() string { return proto.CompactTextString(m) }
func (*BallProperties) ProtoMessage()    {}
func (*BallProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{0}
}

func (m *BallProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BallProperties.Unmarshal(m, b)
}
func (m *BallProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BallProperties.Marshal(b, m, deterministic)
}
func (m *BallProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BallProperties.Merge(m, src)
}
func (m *BallProperties) XXX_Size() int {
	return xxx_messageInfo_BallProperties.Size(m)
}
func (m *BallProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_BallProperties.DiscardUnknown(m)
}

var xxx_messageInfo_BallProperties proto.InternalMessageInfo

func (m *BallProperties) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *BallProperties) GetVelocity() *Velocity {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *BallProperties) GetHolder() *Player {
	if m != nil {
		return m.Holder
	}
	return nil
}

type PlayerProperties struct {
	Side                 Team_Side `protobuf:"varint,1,opt,name=side,proto3,enum=lugo.Team_Side" json:"side,omitempty"`
	Number               uint32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Position             *Point    `protobuf:"bytes,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Velocity             *Velocity `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PlayerProperties) Reset()         { *m = PlayerProperties{} }
func (m *PlayerProperties) String() string { return proto.CompactTextString(m) }
func (*PlayerProperties) ProtoMessage()    {}
func (*PlayerProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{1}
}

func (m *PlayerProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerProperties.Unmarshal(m, b)
}
func (m *PlayerProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerProperties.Marshal(b, m, deterministic)
}
func (m *PlayerProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerProperties.Merge(m, src)
}
func (m *PlayerProperties) XXX_Size() int {
	return xxx_messageInfo_PlayerProperties.Size(m)
}
func (m *PlayerProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerProperties.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerProperties proto.InternalMessageInfo

func (m *PlayerProperties) GetSide() Team_Side {
	if m != nil {
		return m.Side
	}
	return Team_HOME
}

func (m *PlayerProperties) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *PlayerProperties) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *PlayerProperties) GetVelocity() *Velocity {
	if m != nil {
		return m.Velocity
	}
	return nil
}

type GameProperties struct {
	Turn                 uint32   `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	HomeScore            uint32   `protobuf:"varint,2,opt,name=home_score,json=homeScore,proto3" json:"home_score,omitempty"`
	AwayScore            uint32   `protobuf:"varint,3,opt,name=away_score,json=awayScore,proto3" json:"away_score,omitempty"`
	FrameInterval        int64    `protobuf:"varint,4,opt,name=frame_interval,json=frameInterval,proto3" json:"frame_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameProperties) Reset()         { *m = GameProperties{} }
func (m *GameProperties) String() string { return proto.CompactTextString(m) }
func (*GameProperties) ProtoMessage()    {}
func (*GameProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{2}
}

func (m *GameProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameProperties.Unmarshal(m, b)
}
func (m *GameProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameProperties.Marshal(b, m, deterministic)
}
func (m *GameProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameProperties.Merge(m, src)
}
func (m *GameProperties) XXX_Size() int {
	return xxx_messageInfo_GameProperties.Size(m)
}
func (m *GameProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_GameProperties.DiscardUnknown(m)
}

var xxx_messageInfo_GameProperties proto.InternalMessageInfo

func (m *GameProperties) GetTurn() uint32 {
	if m != nil {
		return m.Turn
	}
	return 0
}

func (m *GameProperties) GetHomeScore() uint32 {
	if m != nil {
		return m.HomeScore
	}
	return 0
}

func (m *GameProperties) GetAwayScore() uint32 {
	if m != nil {
		return m.AwayScore
	}
	return 0
}

func (m *GameProperties) GetFrameInterval() int64 {
	if m != nil {
		return m.FrameInterval
	}
	return 0
}

type CommandResponse struct {
	Code                 CommandResponse_StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=lugo.CommandResponse_StatusCode" json:"code,omitempty"`
	GameSnapshot         *GameSnapshot              `protobuf:"bytes,2,opt,name=game_snapshot,json=gameSnapshot,proto3" json:"game_snapshot,omitempty"`
	Details              string                     `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59cb7d8fa836ac0, []int{3}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func (m *CommandResponse) GetCode() CommandResponse_StatusCode {
	if m != nil {
		return m.Code
	}
	return CommandResponse_SUCCESS
}

func (m *CommandResponse) GetGameSnapshot() *GameSnapshot {
	if m != nil {
		return m.GameSnapshot
	}
	return nil
}

func (m *CommandResponse) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func init() {
	proto.RegisterEnum("lugo.CommandResponse_StatusCode", CommandResponse_StatusCode_name, CommandResponse_StatusCode_value)
	proto.RegisterType((*BallProperties)(nil), "lugo.BallProperties")
	proto.RegisterType((*PlayerProperties)(nil), "lugo.PlayerProperties")
	proto.RegisterType((*GameProperties)(nil), "lugo.GameProperties")
	proto.RegisterType((*CommandResponse)(nil), "lugo.CommandResponse")
}

func init() {
	proto.RegisterFile("proto/remote.proto", fileDescriptor_b59cb7d8fa836ac0)
}

var fileDescriptor_b59cb7d8fa836ac0 = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x6d, 0x6f, 0xd3, 0x30,
	0x10, 0x26, 0x6b, 0xe9, 0xd6, 0xdb, 0xd2, 0x75, 0xde, 0x8b, 0xaa, 0x21, 0xa4, 0xa9, 0x80, 0x40,
	0x7c, 0xc8, 0xa4, 0x81, 0x84, 0xe0, 0x03, 0x62, 0x34, 0x11, 0x54, 0x9a, 0xba, 0xca, 0xd9, 0x26,
	0xbe, 0x55, 0x6e, 0x73, 0x6b, 0x23, 0x25, 0x71, 0x64, 0x3b, 0x85, 0xfe, 0x84, 0x89, 0xbf, 0xc1,
	0xaf, 0xe3, 0x57, 0x20, 0xdb, 0x59, 0xd7, 0x95, 0x97, 0xb1, 0x6f, 0xbe, 0xe7, 0xb9, 0x3b, 0x3f,
	0x8f, 0x7d, 0x07, 0x24, 0x17, 0x5c, 0xf1, 0x43, 0x81, 0x29, 0x57, 0xe8, 0x99, 0x80, 0x54, 0x93,
	0x62, 0xcc, 0xf7, 0xb7, 0x2d, 0x93, 0x4f, 0x66, 0x32, 0x1e, 0x49, 0x4b, 0xed, 0x97, 0xe9, 0x12,
	0xc5, 0x14, 0x45, 0x89, 0x3d, 0x1a, 0x73, 0x3e, 0x4e, 0xf0, 0xd0, 0x44, 0xc3, 0xe2, 0xf2, 0x10,
	0xd3, 0x5c, 0xcd, 0x2c, 0xd9, 0xfe, 0xee, 0x40, 0xe3, 0x23, 0x4b, 0x92, 0xbe, 0xe0, 0x39, 0x0a,
	0x15, 0xa3, 0x24, 0xcf, 0x61, 0xad, 0xcf, 0x65, 0xac, 0x62, 0x9e, 0xb5, 0x9c, 0x03, 0xe7, 0xc5,
	0xfa, 0xd1, 0xba, 0xa7, 0x6f, 0xf4, 0xfa, 0x3c, 0xce, 0x14, 0x9d, 0x93, 0xe4, 0x25, 0xac, 0x4d,
	0x31, 0xe1, 0xa3, 0x58, 0xcd, 0x5a, 0x2b, 0x26, 0xb1, 0x61, 0x13, 0x2f, 0x4a, 0x94, 0xce, 0x79,
	0xf2, 0x14, 0x6a, 0x13, 0x9e, 0x44, 0x28, 0x5a, 0x15, 0x93, 0xb9, 0x51, 0xb6, 0x4c, 0xd8, 0x0c,
	0x05, 0x2d, 0xb9, 0xf6, 0x0f, 0x07, 0x9a, 0x16, 0x5a, 0xd0, 0xf3, 0x04, 0xaa, 0x32, 0x8e, 0xd0,
	0x68, 0x69, 0x1c, 0x6d, 0xda, 0xc2, 0x33, 0x64, 0xa9, 0x17, 0xc6, 0x11, 0x52, 0x43, 0x92, 0x3d,
	0xa8, 0x65, 0x45, 0x3a, 0x44, 0x61, 0x94, 0xb8, 0xb4, 0x8c, 0x6e, 0x99, 0xa9, 0xfc, 0xaf, 0x99,
	0xea, 0xbf, 0xcd, 0xb4, 0xaf, 0x1c, 0x68, 0x7c, 0x62, 0x29, 0x2e, 0x88, 0x24, 0x50, 0x55, 0x85,
	0xb0, 0x0f, 0xe6, 0x52, 0x73, 0x26, 0x8f, 0x01, 0x26, 0x3c, 0xc5, 0x81, 0x1c, 0x71, 0x81, 0xa5,
	0xae, 0xba, 0x46, 0x42, 0x0d, 0x68, 0x9a, 0x7d, 0x65, 0xb3, 0x92, 0xae, 0x58, 0x5a, 0x23, 0x96,
	0x7e, 0x06, 0x8d, 0x4b, 0xc1, 0x52, 0x1c, 0xc4, 0x99, 0x42, 0x31, 0x65, 0x89, 0x91, 0x55, 0xa1,
	0xae, 0x41, 0xbb, 0x25, 0xd8, 0xfe, 0xe9, 0xc0, 0x66, 0x87, 0xa7, 0x29, 0xcb, 0x22, 0x8a, 0x32,
	0xe7, 0x99, 0x44, 0xf2, 0x1a, 0xaa, 0x23, 0x3e, 0x7f, 0xb1, 0x03, 0xeb, 0x63, 0x29, 0xc9, 0x0b,
	0x15, 0x53, 0x85, 0xec, 0x70, 0xfd, 0x84, 0x3a, 0x9b, 0xbc, 0x01, 0x77, 0xac, 0xef, 0x93, 0x19,
	0xcb, 0xe5, 0x84, 0xab, 0xf2, 0x4f, 0x89, 0x2d, 0xd7, 0x7e, 0xc3, 0x92, 0xa1, 0x1b, 0xe3, 0x85,
	0x88, 0xb4, 0x60, 0x35, 0x42, 0xc5, 0xe2, 0x44, 0x1a, 0x17, 0x75, 0x7a, 0x1d, 0xb6, 0x7b, 0x00,
	0x37, 0xd7, 0x90, 0x75, 0x58, 0x0d, 0xcf, 0x3b, 0x9d, 0x20, 0x0c, 0x9b, 0x0f, 0xc8, 0x16, 0xb8,
	0xdd, 0xde, 0xc5, 0xf1, 0x49, 0xd7, 0x1f, 0x5c, 0x1c, 0x9f, 0x9c, 0x07, 0x4d, 0x87, 0xec, 0xc2,
	0x96, 0x1f, 0x1c, 0xfb, 0x27, 0xdd, 0x5e, 0x30, 0x08, 0xbe, 0x74, 0x82, 0xc0, 0x0f, 0xfc, 0xe6,
	0x0a, 0xa9, 0xc3, 0xc3, 0xd3, 0xb3, 0xcf, 0x01, 0x6d, 0x8e, 0x8e, 0xae, 0x2a, 0x50, 0xa3, 0x66,
	0x15, 0xc8, 0x7b, 0x70, 0xfb, 0xac, 0x90, 0x78, 0x2a, 0x28, 0xca, 0x22, 0x45, 0xb2, 0xe7, 0xd9,
	0x39, 0xf7, 0xae, 0xe7, 0xdc, 0x0b, 0xf4, 0x9c, 0xef, 0xef, 0xfe, 0xd1, 0x3e, 0x79, 0x0b, 0x6b,
	0x3d, 0xfc, 0xa6, 0xce, 0xf4, 0x47, 0xdd, 0xb3, 0xf4, 0x1d, 0xd4, 0x75, 0xe9, 0xa9, 0x88, 0x50,
	0xdc, 0xb7, 0xf6, 0x03, 0x6c, 0x85, 0xa8, 0x96, 0x36, 0x6e, 0xc7, 0xe6, 0xde, 0x46, 0xff, 0xd6,
	0xc1, 0x87, 0xed, 0x10, 0xd5, 0x6f, 0x5b, 0xb2, 0xb7, 0xb8, 0x50, 0x77, 0x77, 0xb1, 0x3a, 0x96,
	0x86, 0x78, 0xe7, 0xe6, 0xab, 0xef, 0xec, 0x30, 0xac, 0x19, 0xc3, 0xaf, 0x7e, 0x05, 0x00, 0x00,
	0xff, 0xff, 0xed, 0xb0, 0xf2, 0x44, 0xa2, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteClient is the client API for Remote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteClient interface {
	PauseOrResume(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CommandResponse, error)
	NextTurn(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CommandResponse, error)
	NextOrder(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CommandResponse, error)
	SetBallProperties(ctx context.Context, in *BallProperties, opts ...grpc.CallOption) (*CommandResponse, error)
	SetPlayerProperties(ctx context.Context, in *PlayerProperties, opts ...grpc.CallOption) (*CommandResponse, error)
	SetGameProperties(ctx context.Context, in *GameProperties, opts ...grpc.CallOption) (*CommandResponse, error)
}

type remoteClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteClient(cc grpc.ClientConnInterface) RemoteClient {
	return &remoteClient{cc}
}

func (c *remoteClient) PauseOrResume(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/PauseOrResume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) NextTurn(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/NextTurn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) NextOrder(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/NextOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) SetBallProperties(ctx context.Context, in *BallProperties, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/SetBallProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) SetPlayerProperties(ctx context.Context, in *PlayerProperties, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/SetPlayerProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) SetGameProperties(ctx context.Context, in *GameProperties, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/SetGameProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteServer is the server API for Remote service.
type RemoteServer interface {
	PauseOrResume(context.Context, *empty.Empty) (*CommandResponse, error)
	NextTurn(context.Context, *empty.Empty) (*CommandResponse, error)
	NextOrder(context.Context, *empty.Empty) (*CommandResponse, error)
	SetBallProperties(context.Context, *BallProperties) (*CommandResponse, error)
	SetPlayerProperties(context.Context, *PlayerProperties) (*CommandResponse, error)
	SetGameProperties(context.Context, *GameProperties) (*CommandResponse, error)
}

// UnimplementedRemoteServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteServer struct {
}

func (*UnimplementedRemoteServer) PauseOrResume(ctx context.Context, req *empty.Empty) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseOrResume not implemented")
}
func (*UnimplementedRemoteServer) NextTurn(ctx context.Context, req *empty.Empty) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextTurn not implemented")
}
func (*UnimplementedRemoteServer) NextOrder(ctx context.Context, req *empty.Empty) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextOrder not implemented")
}
func (*UnimplementedRemoteServer) SetBallProperties(ctx context.Context, req *BallProperties) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBallProperties not implemented")
}
func (*UnimplementedRemoteServer) SetPlayerProperties(ctx context.Context, req *PlayerProperties) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPlayerProperties not implemented")
}
func (*UnimplementedRemoteServer) SetGameProperties(ctx context.Context, req *GameProperties) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGameProperties not implemented")
}

func RegisterRemoteServer(s *grpc.Server, srv RemoteServer) {
	s.RegisterService(&_Remote_serviceDesc, srv)
}

func _Remote_PauseOrResume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).PauseOrResume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/PauseOrResume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).PauseOrResume(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_NextTurn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).NextTurn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/NextTurn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).NextTurn(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_NextOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).NextOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/NextOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).NextOrder(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_SetBallProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BallProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).SetBallProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/SetBallProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).SetBallProperties(ctx, req.(*BallProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_SetPlayerProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).SetPlayerProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/SetPlayerProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).SetPlayerProperties(ctx, req.(*PlayerProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_SetGameProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).SetGameProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/SetGameProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).SetGameProperties(ctx, req.(*GameProperties))
	}
	return interceptor(ctx, in, info, handler)
}

var _Remote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lugo.Remote",
	HandlerType: (*RemoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PauseOrResume",
			Handler:    _Remote_PauseOrResume_Handler,
		},
		{
			MethodName: "NextTurn",
			Handler:    _Remote_NextTurn_Handler,
		},
		{
			MethodName: "NextOrder",
			Handler:    _Remote_NextOrder_Handler,
		},
		{
			MethodName: "SetBallProperties",
			Handler:    _Remote_SetBallProperties_Handler,
		},
		{
			MethodName: "SetPlayerProperties",
			Handler:    _Remote_SetPlayerProperties_Handler,
		},
		{
			MethodName: "SetGameProperties",
			Handler:    _Remote_SetGameProperties_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/remote.proto",
}
