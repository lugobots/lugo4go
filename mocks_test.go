// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package lugo4go_test is a generated GoMock package.
package lugo4go_test

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	lugo "github.com/lugobots/lugo4go/v2/lugo"
	reflect "reflect"
)

// MockTurnHandler is a mock of TurnHandler interface.
type MockTurnHandler struct {
	ctrl     *gomock.Controller
	recorder *MockTurnHandlerMockRecorder
}

// MockTurnHandlerMockRecorder is the mock recorder for MockTurnHandler.
type MockTurnHandlerMockRecorder struct {
	mock *MockTurnHandler
}

// NewMockTurnHandler creates a new mock instance.
func NewMockTurnHandler(ctrl *gomock.Controller) *MockTurnHandler {
	mock := &MockTurnHandler{ctrl: ctrl}
	mock.recorder = &MockTurnHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTurnHandler) EXPECT() *MockTurnHandlerMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockTurnHandler) Handle(ctx context.Context, snapshot *lugo.GameSnapshot) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Handle", ctx, snapshot)
}

// Handle indicates an expected call of Handle.
func (mr *MockTurnHandlerMockRecorder) Handle(ctx, snapshot interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockTurnHandler)(nil).Handle), ctx, snapshot)
}
