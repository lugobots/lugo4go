// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.19.4
// source: remote.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CommandResponse_StatusCode int32

const (
	CommandResponse_SUCCESS           CommandResponse_StatusCode = 0
	CommandResponse_INVALID_VALUE     CommandResponse_StatusCode = 1
	CommandResponse_DEADLINE_EXCEEDED CommandResponse_StatusCode = 2
	CommandResponse_OTHER             CommandResponse_StatusCode = 99
)

// Enum value maps for CommandResponse_StatusCode.
var (
	CommandResponse_StatusCode_name = map[int32]string{
		0:  "SUCCESS",
		1:  "INVALID_VALUE",
		2:  "DEADLINE_EXCEEDED",
		99: "OTHER",
	}
	CommandResponse_StatusCode_value = map[string]int32{
		"SUCCESS":           0,
		"INVALID_VALUE":     1,
		"DEADLINE_EXCEEDED": 2,
		"OTHER":             99,
	}
)

func (x CommandResponse_StatusCode) Enum() *CommandResponse_StatusCode {
	p := new(CommandResponse_StatusCode)
	*p = x
	return p
}

func (x CommandResponse_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandResponse_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_remote_proto_enumTypes[0].Descriptor()
}

func (CommandResponse_StatusCode) Type() protoreflect.EnumType {
	return &file_remote_proto_enumTypes[0]
}

func (x CommandResponse_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandResponse_StatusCode.Descriptor instead.
func (CommandResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{6, 0}
}

type PauseResumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseResumeRequest) Reset() {
	*x = PauseResumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseResumeRequest) ProtoMessage() {}

func (x *PauseResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseResumeRequest.ProtoReflect.Descriptor instead.
func (*PauseResumeRequest) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{0}
}

type NextTurnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NextTurnRequest) Reset() {
	*x = NextTurnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextTurnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTurnRequest) ProtoMessage() {}

func (x *NextTurnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTurnRequest.ProtoReflect.Descriptor instead.
func (*NextTurnRequest) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{1}
}

type NextOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NextOrderRequest) Reset() {
	*x = NextOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextOrderRequest) ProtoMessage() {}

func (x *NextOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextOrderRequest.ProtoReflect.Descriptor instead.
func (*NextOrderRequest) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{2}
}

type BallProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Point    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Velocity *Velocity `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Holder   *Player   `protobuf:"bytes,3,opt,name=holder,proto3" json:"holder,omitempty"`
}

func (x *BallProperties) Reset() {
	*x = BallProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallProperties) ProtoMessage() {}

func (x *BallProperties) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallProperties.ProtoReflect.Descriptor instead.
func (*BallProperties) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{3}
}

func (x *BallProperties) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BallProperties) GetVelocity() *Velocity {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *BallProperties) GetHolder() *Player {
	if x != nil {
		return x.Holder
	}
	return nil
}

type PlayerProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side     Team_Side `protobuf:"varint,1,opt,name=side,proto3,enum=lugo.Team_Side" json:"side,omitempty"`
	Number   uint32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Position *Point    `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Velocity *Velocity `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
}

func (x *PlayerProperties) Reset() {
	*x = PlayerProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerProperties) ProtoMessage() {}

func (x *PlayerProperties) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerProperties.ProtoReflect.Descriptor instead.
func (*PlayerProperties) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerProperties) GetSide() Team_Side {
	if x != nil {
		return x.Side
	}
	return Team_HOME
}

func (x *PlayerProperties) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PlayerProperties) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerProperties) GetVelocity() *Velocity {
	if x != nil {
		return x.Velocity
	}
	return nil
}

type GameProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Turn          uint32     `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	HomeScore     uint32     `protobuf:"varint,2,opt,name=home_score,json=homeScore,proto3" json:"home_score,omitempty"`
	AwayScore     uint32     `protobuf:"varint,3,opt,name=away_score,json=awayScore,proto3" json:"away_score,omitempty"`
	FrameInterval int64      `protobuf:"varint,4,opt,name=frame_interval,json=frameInterval,proto3" json:"frame_interval,omitempty"`
	ShotClock     *ShotClock `protobuf:"bytes,5,opt,name=shot_clock,json=shotClock,proto3" json:"shot_clock,omitempty"`
}

func (x *GameProperties) Reset() {
	*x = GameProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameProperties) ProtoMessage() {}

func (x *GameProperties) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameProperties.ProtoReflect.Descriptor instead.
func (*GameProperties) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{5}
}

func (x *GameProperties) GetTurn() uint32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *GameProperties) GetHomeScore() uint32 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *GameProperties) GetAwayScore() uint32 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

func (x *GameProperties) GetFrameInterval() int64 {
	if x != nil {
		return x.FrameInterval
	}
	return 0
}

func (x *GameProperties) GetShotClock() *ShotClock {
	if x != nil {
		return x.ShotClock
	}
	return nil
}

type CommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         CommandResponse_StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=lugo.CommandResponse_StatusCode" json:"code,omitempty"`
	GameSnapshot *GameSnapshot              `protobuf:"bytes,2,opt,name=game_snapshot,json=gameSnapshot,proto3" json:"game_snapshot,omitempty"`
	Details      string                     `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{6}
}

func (x *CommandResponse) GetCode() CommandResponse_StatusCode {
	if x != nil {
		return x.Code
	}
	return CommandResponse_SUCCESS
}

func (x *CommandResponse) GetGameSnapshot() *GameSnapshot {
	if x != nil {
		return x.GameSnapshot
	}
	return nil
}

func (x *CommandResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ResumeListeningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeListeningRequest) Reset() {
	*x = ResumeListeningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeListeningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeListeningRequest) ProtoMessage() {}

func (x *ResumeListeningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeListeningRequest.ProtoReflect.Descriptor instead.
func (*ResumeListeningRequest) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{7}
}

type ResumeListeningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResumeListeningResponse) Reset() {
	*x = ResumeListeningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeListeningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeListeningResponse) ProtoMessage() {}

func (x *ResumeListeningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeListeningResponse.ProtoReflect.Descriptor instead.
func (*ResumeListeningResponse) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{8}
}

type ResetPlayerPositionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPlayerPositionsRequest) Reset() {
	*x = ResetPlayerPositionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPlayerPositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPlayerPositionsRequest) ProtoMessage() {}

func (x *ResetPlayerPositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPlayerPositionsRequest.ProtoReflect.Descriptor instead.
func (*ResetPlayerPositionsRequest) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{9}
}

type ResetPlayerPositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSnapshot *GameSnapshot `protobuf:"bytes,1,opt,name=game_snapshot,json=gameSnapshot,proto3" json:"game_snapshot,omitempty"`
}

func (x *ResetPlayerPositionsResponse) Reset() {
	*x = ResetPlayerPositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPlayerPositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPlayerPositionsResponse) ProtoMessage() {}

func (x *ResetPlayerPositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPlayerPositionsResponse.ProtoReflect.Descriptor instead.
func (*ResetPlayerPositionsResponse) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{10}
}

func (x *ResetPlayerPositionsResponse) GetGameSnapshot() *GameSnapshot {
	if x != nil {
		return x.GameSnapshot
	}
	return nil
}

type GameSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameSnapshotRequest) Reset() {
	*x = GameSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSnapshotRequest) ProtoMessage() {}

func (x *GameSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GameSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{11}
}

type GameSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSnapshot *GameSnapshot `protobuf:"bytes,1,opt,name=game_snapshot,json=gameSnapshot,proto3" json:"game_snapshot,omitempty"`
}

func (x *GameSnapshotResponse) Reset() {
	*x = GameSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remote_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSnapshotResponse) ProtoMessage() {}

func (x *GameSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GameSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{12}
}

func (x *GameSnapshotResponse) GetGameSnapshot() *GameSnapshot {
	if x != nil {
		return x.GameSnapshot
	}
	return nil
}

var File_remote_proto protoreflect.FileDescriptor

var file_remote_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x6c, 0x75, 0x67, 0x6f, 0x1a, 0x0d, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x4e, 0x65, 0x78, 0x74, 0x54,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4e, 0x65,
	0x78, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b,
	0x01, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c,
	0x75, 0x67, 0x6f, 0x2e, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0xa4, 0x01, 0x0a,
	0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x69, 0x64, 0x65,
	0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x75, 0x67, 0x6f,
	0x2e, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x68, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x61,
	0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x2e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x74, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x22,
	0xea, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4e, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45,
	0x41, 0x44, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x63, 0x22, 0x18, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x57, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4f, 0x0a, 0x14, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x32, 0x88, 0x05, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0d,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x4f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x18, 0x2e,
	0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x08, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x15, 0x2e, 0x6c, 0x75, 0x67,
	0x6f, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x4e, 0x65, 0x78, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x4e, 0x65, 0x78,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x6c, 0x75, 0x67, 0x6f,
	0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a,
	0x15, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x15, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x14, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x15, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x6c, 0x75,
	0x67, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6c, 0x75, 0x67, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x23, 0x5a, 0x21,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x67, 0x6f, 0x62,
	0x6f, 0x74, 0x73, 0x2f, 0x6c, 0x75, 0x67, 0x6f, 0x34, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_remote_proto_rawDescOnce sync.Once
	file_remote_proto_rawDescData = file_remote_proto_rawDesc
)

func file_remote_proto_rawDescGZIP() []byte {
	file_remote_proto_rawDescOnce.Do(func() {
		file_remote_proto_rawDescData = protoimpl.X.CompressGZIP(file_remote_proto_rawDescData)
	})
	return file_remote_proto_rawDescData
}

var file_remote_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_remote_proto_goTypes = []interface{}{
	(CommandResponse_StatusCode)(0),      // 0: lugo.CommandResponse.StatusCode
	(*PauseResumeRequest)(nil),           // 1: lugo.PauseResumeRequest
	(*NextTurnRequest)(nil),              // 2: lugo.NextTurnRequest
	(*NextOrderRequest)(nil),             // 3: lugo.NextOrderRequest
	(*BallProperties)(nil),               // 4: lugo.BallProperties
	(*PlayerProperties)(nil),             // 5: lugo.PlayerProperties
	(*GameProperties)(nil),               // 6: lugo.GameProperties
	(*CommandResponse)(nil),              // 7: lugo.CommandResponse
	(*ResumeListeningRequest)(nil),       // 8: lugo.ResumeListeningRequest
	(*ResumeListeningResponse)(nil),      // 9: lugo.ResumeListeningResponse
	(*ResetPlayerPositionsRequest)(nil),  // 10: lugo.ResetPlayerPositionsRequest
	(*ResetPlayerPositionsResponse)(nil), // 11: lugo.ResetPlayerPositionsResponse
	(*GameSnapshotRequest)(nil),          // 12: lugo.GameSnapshotRequest
	(*GameSnapshotResponse)(nil),         // 13: lugo.GameSnapshotResponse
	(*Point)(nil),                        // 14: lugo.Point
	(*Velocity)(nil),                     // 15: lugo.Velocity
	(*Player)(nil),                       // 16: lugo.Player
	(Team_Side)(0),                       // 17: lugo.Team.Side
	(*ShotClock)(nil),                    // 18: lugo.ShotClock
	(*GameSnapshot)(nil),                 // 19: lugo.GameSnapshot
}
var file_remote_proto_depIdxs = []int32{
	14, // 0: lugo.BallProperties.position:type_name -> lugo.Point
	15, // 1: lugo.BallProperties.velocity:type_name -> lugo.Velocity
	16, // 2: lugo.BallProperties.holder:type_name -> lugo.Player
	17, // 3: lugo.PlayerProperties.side:type_name -> lugo.Team.Side
	14, // 4: lugo.PlayerProperties.position:type_name -> lugo.Point
	15, // 5: lugo.PlayerProperties.velocity:type_name -> lugo.Velocity
	18, // 6: lugo.GameProperties.shot_clock:type_name -> lugo.ShotClock
	0,  // 7: lugo.CommandResponse.code:type_name -> lugo.CommandResponse.StatusCode
	19, // 8: lugo.CommandResponse.game_snapshot:type_name -> lugo.GameSnapshot
	19, // 9: lugo.ResetPlayerPositionsResponse.game_snapshot:type_name -> lugo.GameSnapshot
	19, // 10: lugo.GameSnapshotResponse.game_snapshot:type_name -> lugo.GameSnapshot
	1,  // 11: lugo.Remote.PauseOrResume:input_type -> lugo.PauseResumeRequest
	2,  // 12: lugo.Remote.NextTurn:input_type -> lugo.NextTurnRequest
	3,  // 13: lugo.Remote.NextOrder:input_type -> lugo.NextOrderRequest
	4,  // 14: lugo.Remote.SetBallProperties:input_type -> lugo.BallProperties
	5,  // 15: lugo.Remote.SetPlayerProperties:input_type -> lugo.PlayerProperties
	6,  // 16: lugo.Remote.SetGameProperties:input_type -> lugo.GameProperties
	8,  // 17: lugo.Remote.ResumeListeningPhase:input_type -> lugo.ResumeListeningRequest
	10, // 18: lugo.Remote.ResetPlayerPositions:input_type -> lugo.ResetPlayerPositionsRequest
	12, // 19: lugo.Remote.GetGameSnapshot:input_type -> lugo.GameSnapshotRequest
	7,  // 20: lugo.Remote.PauseOrResume:output_type -> lugo.CommandResponse
	7,  // 21: lugo.Remote.NextTurn:output_type -> lugo.CommandResponse
	7,  // 22: lugo.Remote.NextOrder:output_type -> lugo.CommandResponse
	7,  // 23: lugo.Remote.SetBallProperties:output_type -> lugo.CommandResponse
	7,  // 24: lugo.Remote.SetPlayerProperties:output_type -> lugo.CommandResponse
	7,  // 25: lugo.Remote.SetGameProperties:output_type -> lugo.CommandResponse
	9,  // 26: lugo.Remote.ResumeListeningPhase:output_type -> lugo.ResumeListeningResponse
	11, // 27: lugo.Remote.ResetPlayerPositions:output_type -> lugo.ResetPlayerPositionsResponse
	13, // 28: lugo.Remote.GetGameSnapshot:output_type -> lugo.GameSnapshotResponse
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_remote_proto_init() }
func file_remote_proto_init() {
	if File_remote_proto != nil {
		return
	}
	file_physics_proto_init()
	file_server_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_remote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseResumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextTurnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BallProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeListeningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeListeningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPlayerPositionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPlayerPositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remote_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_remote_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_remote_proto_goTypes,
		DependencyIndexes: file_remote_proto_depIdxs,
		EnumInfos:         file_remote_proto_enumTypes,
		MessageInfos:      file_remote_proto_msgTypes,
	}.Build()
	File_remote_proto = out.File
	file_remote_proto_rawDesc = nil
	file_remote_proto_goTypes = nil
	file_remote_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteClient is the client API for Remote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteClient interface {
	PauseOrResume(ctx context.Context, in *PauseResumeRequest, opts ...grpc.CallOption) (*CommandResponse, error)
	NextTurn(ctx context.Context, in *NextTurnRequest, opts ...grpc.CallOption) (*CommandResponse, error)
	NextOrder(ctx context.Context, in *NextOrderRequest, opts ...grpc.CallOption) (*CommandResponse, error)
	SetBallProperties(ctx context.Context, in *BallProperties, opts ...grpc.CallOption) (*CommandResponse, error)
	SetPlayerProperties(ctx context.Context, in *PlayerProperties, opts ...grpc.CallOption) (*CommandResponse, error)
	SetGameProperties(ctx context.Context, in *GameProperties, opts ...grpc.CallOption) (*CommandResponse, error)
	ResumeListeningPhase(ctx context.Context, in *ResumeListeningRequest, opts ...grpc.CallOption) (*ResumeListeningResponse, error)
	ResetPlayerPositions(ctx context.Context, in *ResetPlayerPositionsRequest, opts ...grpc.CallOption) (*ResetPlayerPositionsResponse, error)
	GetGameSnapshot(ctx context.Context, in *GameSnapshotRequest, opts ...grpc.CallOption) (*GameSnapshotResponse, error)
}

type remoteClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteClient(cc grpc.ClientConnInterface) RemoteClient {
	return &remoteClient{cc}
}

func (c *remoteClient) PauseOrResume(ctx context.Context, in *PauseResumeRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/PauseOrResume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) NextTurn(ctx context.Context, in *NextTurnRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/NextTurn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) NextOrder(ctx context.Context, in *NextOrderRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/NextOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) SetBallProperties(ctx context.Context, in *BallProperties, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/SetBallProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) SetPlayerProperties(ctx context.Context, in *PlayerProperties, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/SetPlayerProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) SetGameProperties(ctx context.Context, in *GameProperties, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/SetGameProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) ResumeListeningPhase(ctx context.Context, in *ResumeListeningRequest, opts ...grpc.CallOption) (*ResumeListeningResponse, error) {
	out := new(ResumeListeningResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/ResumeListeningPhase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) ResetPlayerPositions(ctx context.Context, in *ResetPlayerPositionsRequest, opts ...grpc.CallOption) (*ResetPlayerPositionsResponse, error) {
	out := new(ResetPlayerPositionsResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/ResetPlayerPositions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) GetGameSnapshot(ctx context.Context, in *GameSnapshotRequest, opts ...grpc.CallOption) (*GameSnapshotResponse, error) {
	out := new(GameSnapshotResponse)
	err := c.cc.Invoke(ctx, "/lugo.Remote/GetGameSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteServer is the server API for Remote service.
type RemoteServer interface {
	PauseOrResume(context.Context, *PauseResumeRequest) (*CommandResponse, error)
	NextTurn(context.Context, *NextTurnRequest) (*CommandResponse, error)
	NextOrder(context.Context, *NextOrderRequest) (*CommandResponse, error)
	SetBallProperties(context.Context, *BallProperties) (*CommandResponse, error)
	SetPlayerProperties(context.Context, *PlayerProperties) (*CommandResponse, error)
	SetGameProperties(context.Context, *GameProperties) (*CommandResponse, error)
	ResumeListeningPhase(context.Context, *ResumeListeningRequest) (*ResumeListeningResponse, error)
	ResetPlayerPositions(context.Context, *ResetPlayerPositionsRequest) (*ResetPlayerPositionsResponse, error)
	GetGameSnapshot(context.Context, *GameSnapshotRequest) (*GameSnapshotResponse, error)
}

// UnimplementedRemoteServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteServer struct {
}

func (*UnimplementedRemoteServer) PauseOrResume(context.Context, *PauseResumeRequest) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseOrResume not implemented")
}
func (*UnimplementedRemoteServer) NextTurn(context.Context, *NextTurnRequest) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextTurn not implemented")
}
func (*UnimplementedRemoteServer) NextOrder(context.Context, *NextOrderRequest) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextOrder not implemented")
}
func (*UnimplementedRemoteServer) SetBallProperties(context.Context, *BallProperties) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBallProperties not implemented")
}
func (*UnimplementedRemoteServer) SetPlayerProperties(context.Context, *PlayerProperties) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPlayerProperties not implemented")
}
func (*UnimplementedRemoteServer) SetGameProperties(context.Context, *GameProperties) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGameProperties not implemented")
}
func (*UnimplementedRemoteServer) ResumeListeningPhase(context.Context, *ResumeListeningRequest) (*ResumeListeningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeListeningPhase not implemented")
}
func (*UnimplementedRemoteServer) ResetPlayerPositions(context.Context, *ResetPlayerPositionsRequest) (*ResetPlayerPositionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPlayerPositions not implemented")
}
func (*UnimplementedRemoteServer) GetGameSnapshot(context.Context, *GameSnapshotRequest) (*GameSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGameSnapshot not implemented")
}

func RegisterRemoteServer(s *grpc.Server, srv RemoteServer) {
	s.RegisterService(&_Remote_serviceDesc, srv)
}

func _Remote_PauseOrResume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).PauseOrResume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/PauseOrResume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).PauseOrResume(ctx, req.(*PauseResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_NextTurn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextTurnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).NextTurn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/NextTurn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).NextTurn(ctx, req.(*NextTurnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_NextOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).NextOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/NextOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).NextOrder(ctx, req.(*NextOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_SetBallProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BallProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).SetBallProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/SetBallProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).SetBallProperties(ctx, req.(*BallProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_SetPlayerProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).SetPlayerProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/SetPlayerProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).SetPlayerProperties(ctx, req.(*PlayerProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_SetGameProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).SetGameProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/SetGameProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).SetGameProperties(ctx, req.(*GameProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_ResumeListeningPhase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeListeningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).ResumeListeningPhase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/ResumeListeningPhase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).ResumeListeningPhase(ctx, req.(*ResumeListeningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_ResetPlayerPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPlayerPositionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).ResetPlayerPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/ResetPlayerPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).ResetPlayerPositions(ctx, req.(*ResetPlayerPositionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_GetGameSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).GetGameSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lugo.Remote/GetGameSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).GetGameSnapshot(ctx, req.(*GameSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Remote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lugo.Remote",
	HandlerType: (*RemoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PauseOrResume",
			Handler:    _Remote_PauseOrResume_Handler,
		},
		{
			MethodName: "NextTurn",
			Handler:    _Remote_NextTurn_Handler,
		},
		{
			MethodName: "NextOrder",
			Handler:    _Remote_NextOrder_Handler,
		},
		{
			MethodName: "SetBallProperties",
			Handler:    _Remote_SetBallProperties_Handler,
		},
		{
			MethodName: "SetPlayerProperties",
			Handler:    _Remote_SetPlayerProperties_Handler,
		},
		{
			MethodName: "SetGameProperties",
			Handler:    _Remote_SetGameProperties_Handler,
		},
		{
			MethodName: "ResumeListeningPhase",
			Handler:    _Remote_ResumeListeningPhase_Handler,
		},
		{
			MethodName: "ResetPlayerPositions",
			Handler:    _Remote_ResetPlayerPositions_Handler,
		},
		{
			MethodName: "GetGameSnapshot",
			Handler:    _Remote_GetGameSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "remote.proto",
}
