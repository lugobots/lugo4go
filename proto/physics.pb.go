// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.27.1
// source: physics.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Vector represent one direction on a cartesian plan
type Vector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Coordinate X to define the vector direction.
	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	// Coordinate Y to define the vector direction.
	Y             float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_physics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_physics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_physics_proto_rawDescGZIP(), []int{0}
}

func (x *Vector) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Point represents one position on the cartesian plan of the game field.
// The coordinates start at the left bottom corner from the top view .
type Point struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Distance from the Y axis to right.
	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	// Distance from the X axis to up.
	Y             int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_physics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_physics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_physics_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Velocity is a tuple with the direction (a vector) an a speed (float) values.
// It defines the velocity of an object.
type Velocity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Direction is a normalised vector that indicates the element direction
	Direction *Vector `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	// Speed of the element.
	Speed         float64 `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Velocity) Reset() {
	*x = Velocity{}
	mi := &file_physics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Velocity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Velocity) ProtoMessage() {}

func (x *Velocity) ProtoReflect() protoreflect.Message {
	mi := &file_physics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Velocity.ProtoReflect.Descriptor instead.
func (*Velocity) Descriptor() ([]byte, []int) {
	return file_physics_proto_rawDescGZIP(), []int{2}
}

func (x *Velocity) GetDirection() *Vector {
	if x != nil {
		return x.Direction
	}
	return nil
}

func (x *Velocity) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

var File_physics_proto protoreflect.FileDescriptor

const file_physics_proto_rawDesc = "" +
	"\n" +
	"\rphysics.proto\x12\x04lugo\"$\n" +
	"\x06Vector\x12\f\n" +
	"\x01x\x18\x01 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x01R\x01y\"#\n" +
	"\x05Point\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\"L\n" +
	"\bVelocity\x12*\n" +
	"\tdirection\x18\x01 \x01(\v2\f.lugo.VectorR\tdirection\x12\x14\n" +
	"\x05speed\x18\x02 \x01(\x01R\x05speedB#Z!github.com/lugobots/lugo4go/protob\x06proto3"

var (
	file_physics_proto_rawDescOnce sync.Once
	file_physics_proto_rawDescData []byte
)

func file_physics_proto_rawDescGZIP() []byte {
	file_physics_proto_rawDescOnce.Do(func() {
		file_physics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_physics_proto_rawDesc), len(file_physics_proto_rawDesc)))
	})
	return file_physics_proto_rawDescData
}

var file_physics_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_physics_proto_goTypes = []any{
	(*Vector)(nil),   // 0: lugo.Vector
	(*Point)(nil),    // 1: lugo.Point
	(*Velocity)(nil), // 2: lugo.Velocity
}
var file_physics_proto_depIdxs = []int32{
	0, // 0: lugo.Velocity.direction:type_name -> lugo.Vector
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_physics_proto_init() }
func file_physics_proto_init() {
	if File_physics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_physics_proto_rawDesc), len(file_physics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_physics_proto_goTypes,
		DependencyIndexes: file_physics_proto_depIdxs,
		MessageInfos:      file_physics_proto_msgTypes,
	}.Build()
	File_physics_proto = out.File
	file_physics_proto_goTypes = nil
	file_physics_proto_depIdxs = nil
}
